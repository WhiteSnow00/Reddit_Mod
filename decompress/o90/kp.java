// 
// Decompiled by Procyon v0.6.0
// 

package o90;

import com.google.common.collect.ImmutableMap$b;
import ex0.b$a;
import ex0.d;
import com.reddit.marketplace.impl.screens.nft.detail.ctasection.CtaScreen;
import com.reddit.screen.snoovatar.builder.categories.storefront.gallery.modes.GalleryViewModeSelectionScreen;
import com.reddit.marketplace.impl.screens.nft.detail.dialog.PurchaseErrorSoldOutDialogScreen;
import com.reddit.marketplace.impl.screens.nft.detail.dialog.PurchaseDebugScreen;
import com.reddit.talk.feature.inroom.sheets.debug.metadatalog.MetadataLogBottomSheetScreen;
import com.reddit.rituals.impl.features.selection.screen.RitualSelectionScreen;
import com.reddit.screen.notification.ui.notifications.compose.NotificationsScreen;
import com.reddit.vault.feature.vault.transaction.detail.TransactionDetailScreen;
import com.reddit.vault.feature.vault.transaction.approve.ApproveTransactionScreen;
import com.reddit.vault.feature.vault.payment.loading.PaymentLoadingScreen;
import com.reddit.vault.feature.vault.payment.intro.PaymentIntroScreen;
import com.reddit.vault.feature.vault.payment.customtab.PaymentActivity;
import com.reddit.vault.feature.vault.membership.cancel.CancelMembershipScreen;
import com.reddit.marketplace.impl.screens.nft.completepurchase.CompletePurchaseScreen;
import com.reddit.marketplace.impl.screens.nft.detail.ProductDetailsScreen;
import com.reddit.marketplace.impl.screens.nft.importnft.ImportNftScreen;
import com.reddit.marketplace.impl.screens.nft.transfer.NftTransferScreen;
import com.reddit.marketplace.impl.screens.nft.claim.NftClaimScreen;
import com.reddit.frontpage.presentation.listing.subreddit.preview.PreviewSubredditListingScreen;
import com.reddit.frontpage.presentation.modtools.ban.add.AddBannedUserScreen;
import com.reddit.auth.impl.phoneauth.sms.check.CheckOtpScreen;
import com.reddit.auth.impl.phoneauth.sms.verify.VerifyWithOtpScreen;
import com.reddit.talk.feature.inroom.sheets.raisedhands.RaisedHandsBottomSheetScreen;
import com.reddit.talk.feature.inroom.sheets.welcome.WelcomeBottomSheetScreen;
import com.reddit.talk.feature.inroom.sheets.bannedusers.BannedUsersBottomSheetScreen;
import com.reddit.talk.feature.inroom.sheets.promotionoffer.PromotionOfferScreen;
import com.reddit.talk.feature.inroom.sheets.profile.ProfileBottomSheetScreen;
import com.reddit.talk.feature.inroom.sheets.overflow.OverflowBottomSheetScreen;
import com.reddit.talk.feature.inroom.sheets.error.ErrorBottomSheetScreen;
import com.reddit.talk.feature.inroom.sheets.overflowusers.OverflowUsersBottomSheetScreen;
import com.reddit.talk.feature.inroom.sheets.debug.DebugBottomSheetScreen;
import com.reddit.talk.feature.inroom.sheets.emojis.EmojisBottomSheetScreen;
import com.reddit.matrix.feature.sheets.useractions.UserActionsSheetScreen;
import com.reddit.modtools.welcomemessage.rules.screen.WelcomeMessageRulesScreen;
import com.reddit.modtools.welcomemessage.settings.screen.WelcomeMessageSettingsScreen;
import com.reddit.screen.snoovatar.dialog.pastoufit.PastOutfitUpsellScreen;
import com.reddit.screen.snoovatar.recommended.confirm.ConfirmRecommendedSnoovatarScreen;
import com.reddit.screen.snoovatar.recommended.selection.RecommendedSnoovatarsScreen;
import com.reddit.screen.onboarding.onboardingtopic.selecttopic.SelectTopicScreen;
import com.reddit.screen.notification.ui.pager.InboxTabPagerScreen;
import com.reddit.screen.notification.ui.messages.InboxMessagesScreen;
import com.reddit.screen.settings.notifications.v2.InboxNotificationSettingsScreen;
import com.reddit.screen.settings.notifications.mod.ModNotificationSettingsScreen;
import com.reddit.screen.settings.password.reset.ResetPasswordScreen;
import com.reddit.screen.settings.password.create.CreatePasswordSettingScreen;
import com.reddit.screen.settings.password.confirm.ConfirmPasswordScreen;
import com.reddit.screen.settings.contentlanguages.addlanguage.AddContentLanguagesScreen;
import com.reddit.vault.feature.settings.learnmore.LearnMoreScreen;
import com.reddit.vault.feature.recoveryphrase.check.RecoveryPhraseCheckScreen;
import com.reddit.vault.feature.recoveryphrase.display.RecoveryPhraseDisplayScreen;
import com.reddit.vault.feature.vault.transfer.TransferScreen;
import com.reddit.vault.feature.vault.coins.PurchaseCoinsScreen;
import com.reddit.vault.feature.vault.deactivatedvault.DeactivatedVaultAlertScreen;
import com.reddit.vault.feature.vault.notice.InfoNoticeScreen;
import com.reddit.vault.feature.vault.burn.BurnEducationScreen;
import com.reddit.vault.feature.vault.feed.VaultFeedScreen;
import com.reddit.vault.feature.vault.points.PointsInfoScreen;
import com.reddit.vault.feature.vault.collectibleavatars.LearnAboutCollectibleAvatarsScreen;
import com.reddit.vault.feature.vault.forcebackup.ForceBackupScreen;
import com.reddit.vault.feature.registration.createvault.CreateVaultScreen;
import com.reddit.vault.feature.registration.masterkey.MasterKeyScreen;
import com.reddit.vault.feature.registration.protectvault.ProtectVaultScreen;
import com.reddit.vault.feature.registration.importvault.ImportVaultScreen;
import com.reddit.vault.feature.registration.securevault.SecureVaultScreen;
import com.reddit.vault.feature.registration.collectiblesecurevault.CollectibleSecureVaultScreen;
import com.reddit.vault.feature.registration.protectvaultflow.ProtectVaultFlowScreen;
import com.reddit.ads.impl.screens.hybridvideo.VideoAdScreen;
import com.reddit.home.impl.screens.pager.HomePagerScreen;
import com.reddit.home.impl.screens.loggedout.HomeLoggedOutScreen;
import com.reddit.screens.chat.inbox.livechat.LiveChatScreen;
import com.reddit.screens.chat.messaging.managelink.ManageInviteLinkScreen;
import com.reddit.frontpage.presentation.subreddit.pager.SubredditPagerScreen;
import com.reddit.frontpage.presentation.listing.multireddit.MultiredditListingScreen;
import com.reddit.frontpage.presentation.listing.discover.DiscoverLinkListingScreen;
import com.reddit.frontpage.presentation.listing.all.AllListingScreen;
import com.reddit.frontpage.presentation.modtools.modqueue.ModQueueListingScreen;
import com.reddit.frontpage.presentation.detail.video.VideoPlayerScreen;
import com.reddit.frontpage.widgets.modtools.modview.ModViewRight;
import com.reddit.frontpage.widgets.modtools.modview.ModViewLeft;
import com.reddit.safety.mutecommunity.screen.settings.MutedSubredditsScreen;
import com.reddit.safety.mutecommunity.screen.bottomsheet.MuteCommunityBottomSheetScreen;
import com.reddit.recap.impl.screen.share.RecapShareSheetScreen;
import com.reddit.auth.impl.phoneauth.phone.PhoneUsageDialogScreen;
import com.reddit.auth.impl.phoneauth.phone.EnterPhoneScreen;
import com.reddit.auth.impl.phoneauth.removephone.RemovePhoneNumberBottomSheetScreen;
import com.reddit.auth.impl.phoneauth.verifypassword.VerifyPasswordScreen;
import com.reddit.auth.impl.phoneauth.createpassword.CreatePasswordScreen;
import com.reddit.auth.impl.phoneauth.addemail.AddEmailScreen;
import com.reddit.auth.screen.login.restore.RecoverUsernameScreen;
import com.reddit.auth.screen.login.restore.ForgotPasswordScreen;
import com.reddit.mod.notes.screen.add.AddUserNoteScreen;
import com.reddit.mod.notes.screen.log.UserLogsScreen;
import com.reddit.mod.removalreasons.screen.detail.RemovalReasonsDetailScreen;
import com.reddit.mod.removalreasons.screen.list.RemovalReasonsScreen;
import com.reddit.talk.feature.create.topicpicker.TopicPickerBottomSheetScreen;
import com.reddit.notification.impl.reenablement.NotificationReEnablementBottomSheet;
import com.reddit.livepost.feature.commentactions.CommentActionsBottomSheetScreen;
import com.reddit.feature.fullbleedplayer.pager.PageableFullBleedScreen;
import com.reddit.matrix.feature.chats.ChatsScreen;
import com.reddit.matrix.feature.chat.ChatScreen;
import com.reddit.matrix.feature.newchat.NewChatScreen;
import com.reddit.matrix.feature.chatsettings.ChatSettingsScreen;
import com.reddit.matrix.feature.groupmembers.GroupMembersScreen;
import com.reddit.matrix.screen.matrix.MatrixScreen;
import com.reddit.modtools.posttypes.picker.PostTypePickerScreen;
import com.reddit.modtools.adjustcrowdcontrol.screen.AdjustCrowdControlScreen;
import com.reddit.modtools.welcomemessage.screen.WelcomeMessageScreen;
import com.reddit.modtools.modqueue.modcommunities.ModCommunitiesScreen;
import com.reddit.link.ui.viewholder.SpotlightVideoAdLinkViewHolder;
import com.reddit.link.ui.viewholder.PromotedUserPostAdLinkViewHolder;
import com.reddit.link.ui.view.PostFooterView;
import com.reddit.link.ui.view.LinkTitleView;
import com.reddit.link.ui.view.LinkSupplementaryTextView;
import com.reddit.link.ui.view.LinkMetadataView;
import com.reddit.link.ui.view.LinkFooterView;
import com.reddit.link.ui.view.HeaderMetadataView;
import com.reddit.screen.snoovatar.quickcreate.QuickCreateScreen;
import com.reddit.screen.snoovatar.customcolorpicker.CustomColorPickerScreen;
import com.reddit.screen.snoovatar.equipped.EquippedScreen;
import com.reddit.screen.snoovatar.share.ShareAndDownloadScreen;
import com.reddit.screen.snoovatar.artistpage.ArtistPageScreen;
import com.reddit.screen.snoovatar.confirmation.ConfirmSnoovatarScreen;
import com.reddit.screen.snoovatar.copy.CopySnoovatarScreen;
import com.reddit.screen.snoovatar.loading.BuilderLoadingScreen;
import com.reddit.screen.communities.modrecommendations.ModRecommendationsView;
import com.reddit.screen.onboarding.languageselection.LanguageSelectionScreen;
import com.reddit.screen.onboarding.lowsignal.OnboardingLowSignalBottomsheetScreen;
import com.reddit.screen.onboarding.host.OnboardingHostScreen;
import com.reddit.screen.onboarding.posting.PostingInOnboardingScreen;
import com.reddit.screen.notification.fcm.RedditMessagingService;
import com.reddit.screen.notification.controller.ExposeExperimentWorker;
import com.reddit.screen.notification.controller.DismissNotificationReceiver;
import com.reddit.screen.notification.controller.CancelNotificationReceiver;
import com.reddit.screen.notification.service.ReplyService;
import com.reddit.screen.notification.service.ComposeService;
import com.reddit.screen.notification.action.NotificationActivity;
import com.reddit.screen.settings.experiments.ExperimentsScreen;
import com.reddit.screen.settings.communitydiscovery.CommunityDiscoverySettingsScreen;
import com.reddit.screen.settings.emailsettings.EmailSettingsScreen;
import com.reddit.screen.settings.mockgeolocation.MockGeolocationScreen;
import com.reddit.screen.settings.mockfeedelement.MockFeedElementScreen;
import com.reddit.screen.settings.communityalerts.CommunityAlertSettingsScreen;
import com.reddit.screen.settings.blocked.BlockedAccountsScreen;
import com.reddit.screen.settings.updateemail.UpdateEmailScreen;
import com.reddit.screen.settings.adpersonalization.AdPersonalizationSettingsScreen;
import com.reddit.screen.settings.chatandmessaging.ChatAndMessagingPermissionsScreen;
import com.reddit.screen.settings.accountsettings.AccountSettingsScreen;
import com.reddit.screen.settings.flairsettings.FlairSettingsScreen;
import com.reddit.screen.settings.exposures.ExposuresScreen;
import com.reddit.screen.settings.personalization.PersonalizationSettingsScreen;
import com.reddit.screen.settings.contentlanguages.ContentLanguagesScreen;
import com.reddit.vault.feature.intro.IntroScreen;
import com.reddit.vault.feature.settings.SettingsScreen;
import com.reddit.vault.feature.errors.ErrorScreen;
import com.reddit.vault.feature.loading.LoadingScreen;
import com.reddit.vault.screens.home.VaultScreen;
import com.reddit.postsubmit.tags.extra.LiveChatConfirmScreen;
import com.reddit.postsubmit.tags.extra.ExtraTagsSelectorScreen;
import com.reddit.postsubmit.screens.linkcomposer.LinkComposerScreen;
import com.reddit.search.screens.communities.CommunitySearchResultsScreen;
import com.reddit.search.screens.people.PeopleSearchResultsScreen;
import com.reddit.search.screens.comments.CommentSearchResultsScreen;
import com.reddit.search.screens.bottomsheet.SearchFilterBottomSheet;
import com.reddit.search.screens.posts.PostsSearchResultsScreen;
import com.reddit.search.screens.ui.RedditSearchView;
import com.reddit.media.player.ui2.RedditVideoViewWrapper;
import com.reddit.video.player.controls.RedditVideoControlsView;
import com.reddit.video.player.view.RedditVideoView;
import com.reddit.screens.profile.details.ProfilePagerScreen;
import com.reddit.screens.communityhubs.create.CreateCommunityHubScreen;
import com.reddit.screens.communityhubs.details.CommunityHubDetailsScreen;
import com.reddit.frontpage.presentation.detail.LightboxScreen;
import com.reddit.frontpage.ui.modview.ModFlairView;
import com.reddit.frontpage.ui.flair.FlairView;
import com.reddit.news.ui.home.HomeFeedScreen;
import com.reddit.news.ui.popular.PopularFeedScreen;
import com.reddit.incognito.screens.welcome.WelcomeIncognitoModeScreen;
import com.reddit.announcement.ui.carousel.AnnouncementCarouselView;
import com.reddit.recap.impl.screen.RecapScreen;
import com.reddit.livediscovery.impl.feature.LiveDiscoveryScreen;
import com.reddit.auth.screen.pager.LoginSignUpPagerScreen;
import com.reddit.auth.screen.welcome.WelcomeDelayedAuthScreen;
import com.reddit.auth.screen.login.LoginScreen;
import com.reddit.typeahead.ui.viewholder.CommunitySearchResultItemViewHolder;
import com.reddit.talk.feature.create.CreateTopicPickerScreen;
import com.reddit.talk.feature.create.CreateRoomScreen;
import com.reddit.talk.feature.inroom.InRoomScreen;
import com.reddit.talk.feature.onboarding.HostOnboardingScreen;
import com.reddit.talk.feature.roomerror.RoomErrorBottomSheetScreen;
import com.reddit.talk.feature.roomlist.RoomListScreen;
import com.reddit.livepost.widgets.ExpandableChatCommentTextView;
import com.reddit.livepost.widgets.ChatInputLayout;
import com.reddit.livepost.widgets.ChatCommentBottomSheet;
import com.reddit.branch.screens.BranchEventListScreen;
import com.reddit.survey.debug.SurveyDebugDialog;
import com.reddit.survey.survey.SurveyScreen;
import com.reddit.communitywelcomescreen.ui.CommunityWelcomeScreen;
import com.reddit.modtools.ban.BannedUsersScreen;
import com.reddit.modtools.action.ModToolsActionsScreen;
import com.reddit.modtools.mediaincomments.MediaInCommentsScreen;
import com.reddit.modtools.moderatorslist.ModeratorsListScreen;
import com.reddit.webembed.webview.WebEmbedWebView;
import com.reddit.screen.onboarding.OnboardingQuestionContainerScreen;
import com.reddit.appshortcut.screens.AppShortcutNavigationActivity;
import com.reddit.postsubmit.tags.TagsSelectorScreen;
import com.reddit.postsubmit.tags.SchedulePostScreen;
import com.reddit.ads.brandlift.BrandLiftSurveyView;
import com.reddit.ads.alert.AdsAnalyticsDialog;
import com.reddit.ads.promoteduserpost.PromotedUserPostDataView;
import com.reddit.specialevents.list.CommunityNavigationScreen;
import com.reddit.specialevents.avatar.AvatarPickerRedirectScreen;
import com.reddit.specialevents.picker.CommunityPickerScreen;
import com.reddit.deeplink.ui.DeepLinkFallbackActivity;
import com.reddit.devplatform.screens.ContextActionUserInputBottomSheet;
import com.reddit.debug.config.AppConfigDebugScreen;
import com.reddit.debug.announcement.AnnouncementDebugDialog;
import com.reddit.debug.logging.DataLoggingActivity;
import com.reddit.screens.usermodal.UserModalScreen;
import com.reddit.screens.purchase.BuyCoinsScreen;
import com.reddit.screens.header.SubredditHeaderView;
import com.reddit.frontpage.ui.SaveMediaScreen;
import com.reddit.news.ui.NewsFeedScreen;
import com.reddit.sharing.custom.ShareBottomSheet;
import com.reddit.sharing.custom.ExternalShareResultReceiver;
import com.reddit.experiments.debug.ExperimentOverrideReceiver;
import com.reddit.comment.ui.CommentScreenAdView;
import com.reddit.wiki.wiki.WikiScreen;
import com.reddit.screen.ComposeBottomSheetScreen;
import com.reddit.richtext.RichTextView;
import com.reddit.debug.DebugActivity;
import com.reddit.sharing.ShareIntentReceiver;
import com.reddit.sharing.ShareActivity;
import com.google.common.collect.ImmutableMap;
import java.util.Map;
import cz0.c;
import se2.e;
import k20.a;
import javax.inject.Provider;
import com.reddit.screen.BaseScreen;

public final class kp implements yt
{
    public final BaseScreen a;
    public final dl b;
    public final kp c;
    public Provider<a> d;
    
    public kp(final dl b, final BaseScreen a) {
        this.c = this;
        this.b = b;
        this.a = a;
        this.d = (Provider<a>)se2.c.b((Provider)vy.e.a((Provider)cz0.c.b((Provider)e.a((Object)a)), (Provider)b.N, (Provider)b.S));
    }
    
    public final Map<Class<?>, tt<?, ?>> getSubFeatureInjectors() {
        final ImmutableMap$b builderWithExpectedSize = ImmutableMap.builderWithExpectedSize(232);
        builderWithExpectedSize.b((Object)ShareActivity.class, (Object)this.b.L3());
        builderWithExpectedSize.b((Object)ShareIntentReceiver.class, (Object)this.b.O3());
        builderWithExpectedSize.b((Object)DebugActivity.class, (Object)this.b.Y0());
        builderWithExpectedSize.b((Object)RichTextView.class, (Object)this.b.B3());
        builderWithExpectedSize.b((Object)ComposeBottomSheetScreen.class, (Object)this.b.H0());
        builderWithExpectedSize.b((Object)WikiScreen.class, (Object)this.b.q4());
        builderWithExpectedSize.b((Object)CommentScreenAdView.class, (Object)this.b.w0());
        builderWithExpectedSize.b((Object)ExperimentOverrideReceiver.class, (Object)this.b.k1());
        builderWithExpectedSize.b((Object)ExternalShareResultReceiver.class, (Object)this.b.o1());
        builderWithExpectedSize.b((Object)ShareBottomSheet.class, (Object)this.b.N3());
        builderWithExpectedSize.b((Object)NewsFeedScreen.class, (Object)this.b.u2());
        builderWithExpectedSize.b((Object)SaveMediaScreen.class, (Object)this.b.F3());
        builderWithExpectedSize.b((Object)SubredditHeaderView.class, (Object)this.b.R3());
        builderWithExpectedSize.b((Object)BuyCoinsScreen.class, (Object)this.b.k0());
        builderWithExpectedSize.b((Object)UserModalScreen.class, (Object)this.b.c4());
        builderWithExpectedSize.b((Object)DataLoggingActivity.class, (Object)this.b.W0());
        builderWithExpectedSize.b((Object)AnnouncementDebugDialog.class, (Object)this.b.X());
        builderWithExpectedSize.b((Object)AppConfigDebugScreen.class, (Object)this.b.Y());
        builderWithExpectedSize.b((Object)ContextActionUserInputBottomSheet.class, (Object)this.b.N0());
        builderWithExpectedSize.b((Object)DeepLinkFallbackActivity.class, (Object)this.b.a1());
        builderWithExpectedSize.b((Object)CommunityPickerScreen.class, (Object)this.b.C0());
        builderWithExpectedSize.b((Object)AvatarPickerRedirectScreen.class, (Object)this.b.c0());
        builderWithExpectedSize.b((Object)CommunityNavigationScreen.class, (Object)this.b.B0());
        builderWithExpectedSize.b((Object)PromotedUserPostDataView.class, (Object)this.b.Y2());
        builderWithExpectedSize.b((Object)AdsAnalyticsDialog.class, (Object)this.b.U());
        builderWithExpectedSize.b((Object)BrandLiftSurveyView.class, (Object)this.b.h0());
        builderWithExpectedSize.b((Object)SchedulePostScreen.class, (Object)this.b.G3());
        builderWithExpectedSize.b((Object)TagsSelectorScreen.class, (Object)this.b.V3());
        builderWithExpectedSize.b((Object)AppShortcutNavigationActivity.class, (Object)this.b.Z());
        builderWithExpectedSize.b((Object)OnboardingQuestionContainerScreen.class, (Object)this.b.C2());
        builderWithExpectedSize.b((Object)WebEmbedWebView.class, (Object)this.b.j4());
        builderWithExpectedSize.b((Object)ModeratorsListScreen.class, (Object)this.b.p2());
        builderWithExpectedSize.b((Object)MediaInCommentsScreen.class, (Object)this.b.c2());
        builderWithExpectedSize.b((Object)ModToolsActionsScreen.class, (Object)this.b.m2());
        builderWithExpectedSize.b((Object)BannedUsersScreen.class, (Object)this.b.e0());
        builderWithExpectedSize.b((Object)CommunityWelcomeScreen.class, (Object)this.b.F0());
        builderWithExpectedSize.b((Object)SurveyScreen.class, (Object)this.b.U3());
        builderWithExpectedSize.b((Object)SurveyDebugDialog.class, (Object)this.b.T3());
        builderWithExpectedSize.b((Object)BranchEventListScreen.class, (Object)this.b.g0());
        builderWithExpectedSize.b((Object)ChatCommentBottomSheet.class, (Object)this.b.o0());
        builderWithExpectedSize.b((Object)ChatInputLayout.class, (Object)this.b.p0());
        builderWithExpectedSize.b((Object)ExpandableChatCommentTextView.class, (Object)this.b.j1());
        builderWithExpectedSize.b((Object)RoomListScreen.class, (Object)this.b.E3());
        builderWithExpectedSize.b((Object)RoomErrorBottomSheetScreen.class, (Object)this.b.D3());
        builderWithExpectedSize.b((Object)HostOnboardingScreen.class, (Object)this.b.B1());
        builderWithExpectedSize.b((Object)InRoomScreen.class, (Object)this.b.E1());
        builderWithExpectedSize.b((Object)CreateRoomScreen.class, (Object)this.b.S0());
        builderWithExpectedSize.b((Object)CreateTopicPickerScreen.class, (Object)this.b.T0());
        builderWithExpectedSize.b((Object)CommunitySearchResultItemViewHolder.class, (Object)this.b.D0());
        builderWithExpectedSize.b((Object)LoginScreen.class, (Object)this.b.X1());
        builderWithExpectedSize.b((Object)WelcomeDelayedAuthScreen.class, (Object)this.b.l4());
        builderWithExpectedSize.b((Object)LoginSignUpPagerScreen.class, (Object)this.b.Y1());
        builderWithExpectedSize.b((Object)LiveDiscoveryScreen.class, (Object)this.b.V1());
        builderWithExpectedSize.b((Object)RecapScreen.class, (Object)this.b.h3());
        builderWithExpectedSize.b((Object)AnnouncementCarouselView.class, (Object)this.b.W());
        builderWithExpectedSize.b((Object)WelcomeIncognitoModeScreen.class, (Object)this.b.m4());
        builderWithExpectedSize.b((Object)PopularFeedScreen.class, (Object)this.b.O2());
        builderWithExpectedSize.b((Object)HomeFeedScreen.class, (Object)this.b.y1());
        builderWithExpectedSize.b((Object)FlairView.class, (Object)this.b.r1());
        builderWithExpectedSize.b((Object)ModFlairView.class, (Object)this.b.h2());
        builderWithExpectedSize.b((Object)LightboxScreen.class, (Object)this.b.N1());
        builderWithExpectedSize.b((Object)CommunityHubDetailsScreen.class, (Object)this.b.A0());
        builderWithExpectedSize.b((Object)CreateCommunityHubScreen.class, (Object)this.b.P0());
        builderWithExpectedSize.b((Object)ProfilePagerScreen.class, (Object)this.b.W2());
        builderWithExpectedSize.b((Object)RedditVideoView.class, (Object)this.b.s3());
        builderWithExpectedSize.b((Object)RedditVideoControlsView.class, (Object)this.b.r3());
        builderWithExpectedSize.b((Object)RedditVideoViewWrapper.class, (Object)this.b.t3());
        builderWithExpectedSize.b((Object)RedditSearchView.class, (Object)this.b.q3());
        builderWithExpectedSize.b((Object)PostsSearchResultsScreen.class, (Object)this.b.S2());
        builderWithExpectedSize.b((Object)SearchFilterBottomSheet.class, (Object)this.b.H3());
        builderWithExpectedSize.b((Object)CommentSearchResultsScreen.class, (Object)this.b.x0());
        builderWithExpectedSize.b((Object)PeopleSearchResultsScreen.class, (Object)this.b.K2());
        builderWithExpectedSize.b((Object)CommunitySearchResultsScreen.class, (Object)this.b.E0());
        builderWithExpectedSize.b((Object)LinkComposerScreen.class, (Object)this.b.O1());
        builderWithExpectedSize.b((Object)ExtraTagsSelectorScreen.class, (Object)this.b.p1());
        builderWithExpectedSize.b((Object)LiveChatConfirmScreen.class, (Object)this.b.T1());
        builderWithExpectedSize.b((Object)VaultScreen.class, (Object)this.b.e4());
        builderWithExpectedSize.b((Object)LoadingScreen.class, (Object)this.b.W1());
        builderWithExpectedSize.b((Object)ErrorScreen.class, (Object)this.b.i1());
        builderWithExpectedSize.b((Object)SettingsScreen.class, (Object)this.b.K3());
        builderWithExpectedSize.b((Object)IntroScreen.class, (Object)this.b.J1());
        builderWithExpectedSize.b((Object)ContentLanguagesScreen.class, (Object)this.b.M0());
        builderWithExpectedSize.b((Object)PersonalizationSettingsScreen.class, (Object)this.b.L2());
        builderWithExpectedSize.b((Object)ExposuresScreen.class, (Object)this.b.n1());
        builderWithExpectedSize.b((Object)FlairSettingsScreen.class, (Object)this.b.q1());
        builderWithExpectedSize.b((Object)AccountSettingsScreen.class, (Object)this.b.N());
        builderWithExpectedSize.b((Object)ChatAndMessagingPermissionsScreen.class, (Object)this.b.n0());
        builderWithExpectedSize.b((Object)AdPersonalizationSettingsScreen.class, (Object)this.b.O());
        builderWithExpectedSize.b((Object)UpdateEmailScreen.class, (Object)this.b.Z3());
        builderWithExpectedSize.b((Object)BlockedAccountsScreen.class, (Object)this.b.f0());
        builderWithExpectedSize.b((Object)CommunityAlertSettingsScreen.class, (Object)this.b.y0());
        builderWithExpectedSize.b((Object)MockFeedElementScreen.class, (Object)this.b.e2());
        builderWithExpectedSize.b((Object)MockGeolocationScreen.class, (Object)this.b.f2());
        builderWithExpectedSize.b((Object)EmailSettingsScreen.class, (Object)this.b.d1());
        builderWithExpectedSize.b((Object)CommunityDiscoverySettingsScreen.class, (Object)this.b.z0());
        builderWithExpectedSize.b((Object)ExperimentsScreen.class, (Object)this.b.l1());
        builderWithExpectedSize.b((Object)NotificationActivity.class, (Object)this.b.x2());
        builderWithExpectedSize.b((Object)ComposeService.class, (Object)this.b.I0());
        builderWithExpectedSize.b((Object)ReplyService.class, (Object)this.b.z3());
        builderWithExpectedSize.b((Object)CancelNotificationReceiver.class, (Object)this.b.m0());
        builderWithExpectedSize.b((Object)DismissNotificationReceiver.class, (Object)this.b.c1());
        builderWithExpectedSize.b((Object)ExposeExperimentWorker.class, (Object)this.b.m1());
        builderWithExpectedSize.b((Object)RedditMessagingService.class, (Object)this.b.o3());
        builderWithExpectedSize.b((Object)PostingInOnboardingScreen.class, (Object)this.b.R2());
        builderWithExpectedSize.b((Object)OnboardingHostScreen.class, (Object)this.b.A2());
        builderWithExpectedSize.b((Object)OnboardingLowSignalBottomsheetScreen.class, (Object)this.b.B2());
        builderWithExpectedSize.b((Object)LanguageSelectionScreen.class, (Object)this.b.K1());
        builderWithExpectedSize.b((Object)ModRecommendationsView.class, (Object)this.b.l2());
        builderWithExpectedSize.b((Object)BuilderLoadingScreen.class, (Object)this.b.i0());
        builderWithExpectedSize.b((Object)CopySnoovatarScreen.class, (Object)this.b.O0());
        builderWithExpectedSize.b((Object)ConfirmSnoovatarScreen.class, (Object)this.b.L0());
        builderWithExpectedSize.b((Object)ArtistPageScreen.class, (Object)this.b.b0());
        builderWithExpectedSize.b((Object)ShareAndDownloadScreen.class, (Object)this.b.M3());
        builderWithExpectedSize.b((Object)EquippedScreen.class, (Object)this.b.g1());
        builderWithExpectedSize.b((Object)CustomColorPickerScreen.class, (Object)this.b.V0());
        builderWithExpectedSize.b((Object)QuickCreateScreen.class, (Object)this.b.f3());
        builderWithExpectedSize.b((Object)HeaderMetadataView.class, (Object)this.b.x1());
        builderWithExpectedSize.b((Object)LinkFooterView.class, (Object)this.b.P1());
        builderWithExpectedSize.b((Object)LinkMetadataView.class, (Object)this.b.Q1());
        builderWithExpectedSize.b((Object)LinkSupplementaryTextView.class, (Object)this.b.R1());
        builderWithExpectedSize.b((Object)LinkTitleView.class, (Object)this.b.S1());
        builderWithExpectedSize.b((Object)PostFooterView.class, (Object)this.b.P2());
        builderWithExpectedSize.b((Object)PromotedUserPostAdLinkViewHolder.class, (Object)this.b.X2());
        builderWithExpectedSize.b((Object)SpotlightVideoAdLinkViewHolder.class, (Object)this.b.Q3());
        builderWithExpectedSize.b((Object)ModCommunitiesScreen.class, (Object)this.b.g2());
        builderWithExpectedSize.b((Object)WelcomeMessageScreen.class, (Object)this.b.o4());
        builderWithExpectedSize.b((Object)AdjustCrowdControlScreen.class, (Object)this.b.T());
        builderWithExpectedSize.b((Object)PostTypePickerScreen.class, (Object)this.b.Q2());
        builderWithExpectedSize.b((Object)MatrixScreen.class, (Object)this.b.b2());
        builderWithExpectedSize.b((Object)GroupMembersScreen.class, (Object)this.b.w1());
        builderWithExpectedSize.b((Object)ChatSettingsScreen.class, (Object)this.b.r0());
        builderWithExpectedSize.b((Object)NewChatScreen.class, (Object)this.b.t2());
        builderWithExpectedSize.b((Object)ChatScreen.class, (Object)this.b.q0());
        builderWithExpectedSize.b((Object)ChatsScreen.class, (Object)this.b.s0());
        builderWithExpectedSize.b((Object)PageableFullBleedScreen.class, (Object)this.b.F2());
        builderWithExpectedSize.b((Object)CommentActionsBottomSheetScreen.class, (Object)this.b.v0());
        builderWithExpectedSize.b((Object)NotificationReEnablementBottomSheet.class, (Object)this.b.y2());
        builderWithExpectedSize.b((Object)TopicPickerBottomSheetScreen.class, (Object)this.b.W3());
        builderWithExpectedSize.b((Object)RemovalReasonsScreen.class, (Object)this.b.x3());
        builderWithExpectedSize.b((Object)RemovalReasonsDetailScreen.class, (Object)this.b.w3());
        builderWithExpectedSize.b((Object)UserLogsScreen.class, (Object)this.b.b4());
        builderWithExpectedSize.b((Object)AddUserNoteScreen.class, (Object)this.b.S());
        builderWithExpectedSize.b((Object)ForgotPasswordScreen.class, (Object)this.b.t1());
        builderWithExpectedSize.b((Object)RecoverUsernameScreen.class, (Object)this.b.k3());
        builderWithExpectedSize.b((Object)AddEmailScreen.class, (Object)this.b.R());
        builderWithExpectedSize.b((Object)CreatePasswordScreen.class, (Object)this.b.Q0());
        builderWithExpectedSize.b((Object)VerifyPasswordScreen.class, (Object)this.b.f4());
        builderWithExpectedSize.b((Object)RemovePhoneNumberBottomSheetScreen.class, (Object)this.b.y3());
        builderWithExpectedSize.b((Object)EnterPhoneScreen.class, (Object)this.b.f1());
        builderWithExpectedSize.b((Object)PhoneUsageDialogScreen.class, (Object)this.b.M2());
        builderWithExpectedSize.b((Object)RecapShareSheetScreen.class, (Object)this.b.i3());
        builderWithExpectedSize.b((Object)MuteCommunityBottomSheetScreen.class, (Object)this.b.r2());
        builderWithExpectedSize.b((Object)MutedSubredditsScreen.class, (Object)this.b.s2());
        builderWithExpectedSize.b((Object)ModViewLeft.class, (Object)this.b.n2());
        builderWithExpectedSize.b((Object)ModViewRight.class, (Object)this.b.o2());
        builderWithExpectedSize.b((Object)VideoPlayerScreen.class, (Object)this.b.i4());
        builderWithExpectedSize.b((Object)ModQueueListingScreen.class, (Object)this.b.k2());
        builderWithExpectedSize.b((Object)AllListingScreen.class, (Object)this.b.V());
        builderWithExpectedSize.b((Object)DiscoverLinkListingScreen.class, (Object)this.b.b1());
        builderWithExpectedSize.b((Object)MultiredditListingScreen.class, (Object)this.b.q2());
        builderWithExpectedSize.b((Object)SubredditPagerScreen.class, (Object)this.b.S3());
        builderWithExpectedSize.b((Object)ManageInviteLinkScreen.class, (Object)this.b.Z1());
        builderWithExpectedSize.b((Object)LiveChatScreen.class, (Object)this.b.U1());
        builderWithExpectedSize.b((Object)HomeLoggedOutScreen.class, (Object)this.b.z1());
        builderWithExpectedSize.b((Object)HomePagerScreen.class, (Object)this.b.A1());
        builderWithExpectedSize.b((Object)VideoAdScreen.class, (Object)this.b.h4());
        builderWithExpectedSize.b((Object)ProtectVaultFlowScreen.class, (Object)this.b.a3());
        builderWithExpectedSize.b((Object)CollectibleSecureVaultScreen.class, (Object)this.b.u0());
        builderWithExpectedSize.b((Object)SecureVaultScreen.class, (Object)this.b.I3());
        builderWithExpectedSize.b((Object)ImportVaultScreen.class, (Object)this.b.D1());
        builderWithExpectedSize.b((Object)ProtectVaultScreen.class, (Object)this.b.b3());
        builderWithExpectedSize.b((Object)MasterKeyScreen.class, (Object)this.b.a2());
        builderWithExpectedSize.b((Object)CreateVaultScreen.class, (Object)this.b.U0());
        builderWithExpectedSize.b((Object)ForceBackupScreen.class, (Object)this.b.s1());
        builderWithExpectedSize.b((Object)LearnAboutCollectibleAvatarsScreen.class, (Object)this.b.L1());
        builderWithExpectedSize.b((Object)PointsInfoScreen.class, (Object)this.b.N2());
        builderWithExpectedSize.b((Object)VaultFeedScreen.class, (Object)this.b.d4());
        builderWithExpectedSize.b((Object)BurnEducationScreen.class, (Object)this.b.j0());
        builderWithExpectedSize.b((Object)InfoNoticeScreen.class, (Object)this.b.I1());
        builderWithExpectedSize.b((Object)DeactivatedVaultAlertScreen.class, (Object)this.b.X0());
        builderWithExpectedSize.b((Object)PurchaseCoinsScreen.class, (Object)this.b.c3());
        builderWithExpectedSize.b((Object)TransferScreen.class, (Object)this.b.Y3());
        builderWithExpectedSize.b((Object)RecoveryPhraseDisplayScreen.class, (Object)this.b.m3());
        builderWithExpectedSize.b((Object)RecoveryPhraseCheckScreen.class, (Object)this.b.l3());
        builderWithExpectedSize.b((Object)LearnMoreScreen.class, (Object)this.b.M1());
        builderWithExpectedSize.b((Object)AddContentLanguagesScreen.class, (Object)this.b.Q());
        builderWithExpectedSize.b((Object)ConfirmPasswordScreen.class, (Object)this.b.J0());
        builderWithExpectedSize.b((Object)CreatePasswordSettingScreen.class, (Object)this.b.R0());
        builderWithExpectedSize.b((Object)ResetPasswordScreen.class, (Object)this.b.A3());
        builderWithExpectedSize.b((Object)ModNotificationSettingsScreen.class, (Object)this.b.j2());
        builderWithExpectedSize.b((Object)InboxNotificationSettingsScreen.class, (Object)this.b.G1());
        builderWithExpectedSize.b((Object)InboxMessagesScreen.class, (Object)this.b.F1());
        builderWithExpectedSize.b((Object)InboxTabPagerScreen.class, (Object)this.b.H1());
        builderWithExpectedSize.b((Object)SelectTopicScreen.class, (Object)this.b.J3());
        builderWithExpectedSize.b((Object)RecommendedSnoovatarsScreen.class, (Object)this.b.j3());
        builderWithExpectedSize.b((Object)ConfirmRecommendedSnoovatarScreen.class, (Object)this.b.K0());
        builderWithExpectedSize.b((Object)PastOutfitUpsellScreen.class, (Object)this.b.G2());
        builderWithExpectedSize.b((Object)WelcomeMessageSettingsScreen.class, (Object)this.b.p4());
        builderWithExpectedSize.b((Object)WelcomeMessageRulesScreen.class, (Object)this.b.n4());
        builderWithExpectedSize.b((Object)UserActionsSheetScreen.class, (Object)this.b.a4());
        builderWithExpectedSize.b((Object)EmojisBottomSheetScreen.class, (Object)this.b.e1());
        builderWithExpectedSize.b((Object)DebugBottomSheetScreen.class, (Object)this.b.Z0());
        builderWithExpectedSize.b((Object)OverflowUsersBottomSheetScreen.class, (Object)this.b.E2());
        builderWithExpectedSize.b((Object)ErrorBottomSheetScreen.class, (Object)this.b.h1());
        builderWithExpectedSize.b((Object)OverflowBottomSheetScreen.class, (Object)this.b.D2());
        builderWithExpectedSize.b((Object)ProfileBottomSheetScreen.class, (Object)this.b.V2());
        builderWithExpectedSize.b((Object)PromotionOfferScreen.class, (Object)this.b.Z2());
        builderWithExpectedSize.b((Object)BannedUsersBottomSheetScreen.class, (Object)this.b.d0());
        builderWithExpectedSize.b((Object)WelcomeBottomSheetScreen.class, (Object)this.b.k4());
        builderWithExpectedSize.b((Object)RaisedHandsBottomSheetScreen.class, (Object)this.b.g3());
        builderWithExpectedSize.b((Object)VerifyWithOtpScreen.class, (Object)this.b.g4());
        builderWithExpectedSize.b((Object)CheckOtpScreen.class, (Object)this.b.t0());
        builderWithExpectedSize.b((Object)AddBannedUserScreen.class, (Object)this.b.P());
        builderWithExpectedSize.b((Object)PreviewSubredditListingScreen.class, (Object)this.b.T2());
        builderWithExpectedSize.b((Object)NftClaimScreen.class, (Object)this.b.v2());
        builderWithExpectedSize.b((Object)NftTransferScreen.class, (Object)this.b.w2());
        builderWithExpectedSize.b((Object)ImportNftScreen.class, (Object)this.b.C1());
        builderWithExpectedSize.b((Object)ProductDetailsScreen.class, (Object)this.b.U2());
        builderWithExpectedSize.b((Object)CompletePurchaseScreen.class, (Object)this.b.G0());
        builderWithExpectedSize.b((Object)CancelMembershipScreen.class, (Object)this.b.l0());
        builderWithExpectedSize.b((Object)PaymentActivity.class, (Object)this.b.H2());
        builderWithExpectedSize.b((Object)PaymentIntroScreen.class, (Object)this.b.I2());
        builderWithExpectedSize.b((Object)PaymentLoadingScreen.class, (Object)this.b.J2());
        builderWithExpectedSize.b((Object)ApproveTransactionScreen.class, (Object)this.b.a0());
        builderWithExpectedSize.b((Object)TransactionDetailScreen.class, (Object)this.b.X3());
        builderWithExpectedSize.b((Object)NotificationsScreen.class, (Object)this.b.z2());
        builderWithExpectedSize.b((Object)RitualSelectionScreen.class, (Object)this.b.C3());
        builderWithExpectedSize.b((Object)MetadataLogBottomSheetScreen.class, (Object)this.b.d2());
        builderWithExpectedSize.b((Object)PurchaseDebugScreen.class, (Object)this.b.d3());
        builderWithExpectedSize.b((Object)PurchaseErrorSoldOutDialogScreen.class, (Object)this.b.e3());
        builderWithExpectedSize.b((Object)GalleryViewModeSelectionScreen.class, (Object)this.b.u1());
        builderWithExpectedSize.b((Object)CtaScreen.class, (Object)new d((b$a)new us(this.b, this.c)));
        return (Map<Class<?>, tt<?, ?>>)builderWithExpectedSize.a(true);
    }
}
