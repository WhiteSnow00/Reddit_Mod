// 
// Decompiled by Procyon v0.6.0
// 

package ek2;

import vl.a;

public final class i implements b
{
    public static final float[][] d;
    public float[] b;
    public int c;
    
    static {
        d = new float[][] { { 0.9999247f, -0.012271538f }, { 0.99932235f, -0.036807224f }, { 0.9981181f, -0.061320737f }, { 0.9963126f, -0.08579731f }, { 0.993907f, -0.110222206f }, { 0.99090266f, -0.1345807f }, { 0.9873014f, -0.15885815f }, { 0.9831055f, -0.18303989f }, { 0.9783174f, -0.20711137f }, { 0.97293997f, -0.2310581f }, { 0.96697646f, -0.25486565f }, { 0.9604305f, -0.2785197f }, { 0.953306f, -0.30200595f }, { 0.9456073f, -0.3253103f }, { 0.937339f, -0.34841868f }, { 0.9285061f, -0.3713172f }, { 0.9191139f, -0.39399204f }, { 0.909168f, -0.41642955f }, { 0.8986745f, -0.43861625f }, { 0.88763964f, -0.46053872f }, { 0.8760701f, -0.48218378f }, { 0.86397284f, -0.50353837f }, { 0.8513552f, -0.52458966f }, { 0.8382247f, -0.545325f }, { 0.8245893f, -0.5657318f }, { 0.81045717f, -0.58579785f }, { 0.7958369f, -0.60551107f }, { 0.7807372f, -0.6248595f }, { 0.76516724f, -0.64383155f }, { 0.7491364f, -0.6624158f }, { 0.7326543f, -0.680601f }, { 0.71573085f, -0.69837624f } };
    }
    
    public i(final int n) {
        this.b = new float[n * 2 * 20];
        this.c = 0;
    }
    
    public final void a(final g g, final float[][][] array, final float[] array2) {
        final float[] array3 = new float[32];
        final float[] array4 = new float[32];
        int n;
        for (int i = n = 0; i < g.x0; ++i) {
            for (int j = 0; j < 32; ++j) {
                final float[] array5 = array[i][j];
                final float n2 = array5[0];
                final float[] array6 = i.d[j];
                array3[j] = n2 * array6[0] - array5[1] * array6[1];
                array4[j] = array5[0] * array6[1] + array5[1] * array6[0];
                array3[j] *= 0.015625f;
                array4[j] *= 0.015625f;
            }
            final float n3 = array3[15];
            final float n4 = array3[16];
            final float n5 = (n3 + n4) * 0.70710677f;
            final float n6 = (n3 - n4) * 0.70710677f;
            final float n7 = array3[8];
            final float n8 = array3[23];
            final float n9 = (n7 + n8) * 0.70710677f;
            final float n10 = (n7 - n8) * 0.70710677f;
            final float n11 = array3[12];
            final float n12 = array3[19];
            final float n13 = (n11 + n12) * 0.70710677f;
            final float n14 = (n11 - n12) * 0.70710677f;
            final float n15 = array3[11];
            final float n16 = array3[20];
            final float n17 = (n15 + n16) * 0.70710677f;
            final float n18 = (n15 - n16) * 0.70710677f;
            final float n19 = array3[14];
            final float n20 = array3[17];
            final float n21 = (n19 + n20) * 0.70710677f;
            final float n22 = (n19 - n20) * 0.70710677f;
            final float n23 = array3[9];
            final float n24 = array3[22];
            final float n25 = (n23 + n24) * 0.70710677f;
            final float n26 = (n23 - n24) * 0.70710677f;
            final float n27 = array3[13];
            final float n28 = array3[18];
            final float n29 = (n27 + n28) * 0.70710677f;
            final float n30 = (n27 - n28) * 0.70710677f;
            final float n31 = array3[10];
            final float n32 = array3[21];
            final float n33 = (n31 + n32) * 0.70710677f;
            final float n34 = (n31 - n32) * 0.70710677f;
            final float n35 = array3[0];
            final float n36 = n35 - n5;
            final float n37 = n35 + n5;
            final float n38 = array3[31];
            final float n39 = n38 - n6;
            final float n40 = n38 + n6;
            final float n41 = array3[7];
            final float n42 = n41 - n9;
            final float n43 = n41 + n9;
            final float n44 = array3[24];
            final float n45 = n44 - n10;
            final float n46 = n44 + n10;
            final float n47 = array3[3];
            final float n48 = n47 - n13;
            final float n49 = n47 + n13;
            final float n50 = array3[28];
            final float n51 = n50 - n14;
            final float n52 = n50 + n14;
            final float n53 = array3[4];
            final float n54 = n53 - n17;
            final float n55 = n53 + n17;
            final float n56 = array3[27];
            final float n57 = n56 - n18;
            final float n58 = n56 + n18;
            final float n59 = array3[1];
            final float n60 = n59 - n21;
            final float n61 = n59 + n21;
            final float n62 = array3[30];
            final float n63 = n62 - n22;
            final float n64 = n62 + n22;
            final float n65 = array3[6];
            final float n66 = n65 - n25;
            final float n67 = n65 + n25;
            final float n68 = array3[25];
            final float n69 = n68 - n26;
            final float n70 = n68 + n26;
            final float n71 = array3[2];
            final float n72 = n71 - n29;
            final float n73 = n71 + n29;
            final float n74 = array3[29];
            final float n75 = n74 - n30;
            final float n76 = n74 + n30;
            final float n77 = array3[5];
            final float n78 = n77 - n33;
            final float n79 = n77 + n33;
            final float n80 = array3[26];
            final float n81 = n80 - n34;
            final float n82 = n80 + n34;
            final float n83 = (n46 + n43) * 0.9238795f;
            final float n84 = n46 * -0.5411961f + n83;
            final float n85 = n43 * 1.306563f - n83;
            final float n86 = (n45 + n42) * -0.38268343f;
            final float n87 = n45 * 1.306563f + n86;
            final float n88 = n42 * 0.5411961f - n86;
            final float n89 = (n58 + n55) * 0.9238795f;
            final float n90 = n58 * -0.5411961f + n89;
            final float n91 = n55 * 1.306563f - n89;
            final float n92 = (n57 + n54) * -0.38268343f;
            final float n93 = n57 * 1.306563f + n92;
            final float n94 = n54 * 0.5411961f - n92;
            final float n95 = (n70 + n67) * 0.9238795f;
            final float n96 = n70 * -0.5411961f + n95;
            final float n97 = n67 * 1.306563f - n95;
            final float n98 = (n69 + n66) * -0.38268343f;
            final float n99 = n69 * 1.306563f + n98;
            final float n100 = n66 * 0.5411961f - n98;
            final float n101 = (n82 + n79) * 0.9238795f;
            final float n102 = n82 * -0.5411961f + n101;
            final float n103 = n79 * 1.306563f - n101;
            final float n104 = (n81 + n78) * -0.38268343f;
            final float n105 = n81 * 1.306563f + n104;
            final float n106 = n78 * 0.5411961f - n104;
            final float n107 = n37 - n84;
            final float n108 = n37 + n84;
            final float n109 = n40 - n85;
            final float n110 = n40 + n85;
            final float n111 = n36 - n87;
            final float n112 = n36 + n87;
            final float n113 = n39 - n88;
            final float n114 = n39 + n88;
            final float n115 = n49 - n90;
            final float n116 = n49 + n90;
            final float n117 = n52 - n91;
            final float n118 = n52 + n91;
            final float n119 = n48 - n93;
            final float n120 = n48 + n93;
            final float n121 = n51 - n94;
            final float n122 = n51 + n94;
            final float n123 = n61 - n96;
            final float n124 = n61 + n96;
            final float n125 = n64 - n97;
            final float n126 = n64 + n97;
            final float n127 = n60 - n99;
            final float n128 = n60 + n99;
            final float n129 = n63 - n100;
            final float n130 = n63 + n100;
            final float n131 = n73 - n102;
            final float n132 = n73 + n102;
            final float n133 = n76 - n103;
            final float n134 = n76 + n103;
            final float n135 = n72 - n105;
            final float n136 = n72 + n105;
            final float n137 = n75 - n106;
            final float n138 = n75 + n106;
            final float n139 = (n118 + n116) * 0.98078525f;
            final float n140 = n118 * -0.78569496f + n139;
            final float n141 = n116 * 1.1758755f - n139;
            final float n142 = (n122 + n120) * 0.55557024f;
            final float n143 = n122 * 0.27589938f + n142;
            final float n144 = n120 * 1.3870399f - n142;
            final float n145 = (n117 + n115) * -0.19509032f;
            final float n146 = n117 * 1.1758755f + n145;
            final float n147 = n115 * 0.78569496f - n145;
            final float n148 = (n121 + n119) * -0.8314696f;
            final float n149 = n121 * 1.3870399f + n148;
            final float n150 = n119 * -0.27589938f - n148;
            final float n151 = (n134 + n132) * 0.98078525f;
            final float n152 = n134 * -0.78569496f + n151;
            final float n153 = n132 * 1.1758755f - n151;
            final float n154 = (n138 + n136) * 0.55557024f;
            final float n155 = n138 * 0.27589938f + n154;
            final float n156 = n136 * 1.3870399f - n154;
            final float n157 = (n133 + n131) * -0.19509032f;
            final float n158 = n133 * 1.1758755f + n157;
            final float n159 = n131 * 0.78569496f - n157;
            final float n160 = (n137 + n135) * -0.8314696f;
            final float n161 = n137 * 1.3870399f + n160;
            final float n162 = n135 * -0.27589938f - n160;
            final float n163 = n108 - n140;
            final float n164 = n108 + n140;
            final float n165 = n110 - n141;
            final float n166 = n110 + n141;
            final float n167 = n112 - n143;
            final float n168 = n112 + n143;
            final float n169 = n114 - n144;
            final float n170 = n114 + n144;
            final float n171 = n107 - n146;
            final float n172 = n107 + n146;
            final float n173 = n109 - n147;
            final float n174 = n109 + n147;
            final float n175 = n111 - n149;
            final float n176 = n111 + n149;
            final float n177 = n113 - n150;
            final float n178 = n113 + n150;
            final float n179 = n124 - n152;
            final float n180 = n124 + n152;
            final float n181 = n126 - n153;
            final float n182 = n126 + n153;
            final float n183 = n128 - n155;
            final float n184 = n128 + n155;
            final float n185 = n130 - n156;
            final float n186 = n130 + n156;
            final float n187 = n123 - n158;
            final float n188 = n123 + n158;
            final float n189 = n125 - n159;
            final float n190 = n125 + n159;
            final float n191 = n127 - n161;
            final float n192 = n127 + n161;
            final float n193 = n129 - n162;
            final float n194 = n129 + n162;
            final float n195 = (n182 + n180) * 0.9951847f;
            final float n196 = n182 * -0.89716756f + n195;
            final float n197 = n180 * 1.0932019f - n195;
            final float n198 = (n186 + n184) * 0.8819213f;
            final float n199 = n186 * -0.41052452f + n198;
            final float n200 = n184 * 1.353318f - n198;
            final float n201 = (n190 + n188) * 0.6343933f;
            final float n202 = n190 * 0.13861717f + n201;
            final float n203 = n188 * 1.4074037f - n201;
            final float n204 = (n194 + n192) * 0.29028466f;
            final float n205 = n194 * 0.66665566f + n204;
            final float n206 = n192 * 1.247225f - n204;
            final float n207 = (n181 + n179) * -0.09801714f;
            final float n208 = n181 * 1.0932019f + n207;
            final float n209 = n179 * 0.89716756f - n207;
            final float n210 = (n185 + n183) * -0.47139674f;
            final float n211 = n185 * 1.353318f + n210;
            final float n212 = n183 * 0.41052452f - n210;
            final float n213 = (n189 + n187) * -0.77301043f;
            final float n214 = n189 * 1.4074037f + n213;
            final float n215 = n187 * -0.13861717f - n213;
            final float n216 = (n193 + n191) * -0.95694035f;
            final float n217 = n193 * 1.247225f + n216;
            final float n218 = n191 * -0.66665566f - n216;
            final float n219 = n164 - n196;
            final float n220 = n164 + n196;
            final float n221 = n166 - n197;
            final float n222 = n166 + n197;
            final float n223 = n168 - n199;
            final float n224 = n168 + n199;
            final float n225 = n170 - n200;
            final float n226 = n170 + n200;
            final float n227 = n172 - n202;
            final float n228 = n172 + n202;
            final float n229 = n174 - n203;
            final float n230 = n174 + n203;
            final float n231 = n176 - n205;
            final float n232 = n176 + n205;
            final float n233 = n178 - n206;
            final float n234 = n178 + n206;
            final float n235 = n163 - n208;
            final float n236 = n163 + n208;
            final float n237 = n165 - n209;
            final float n238 = n165 + n209;
            final float n239 = n167 - n211;
            final float n240 = n167 + n211;
            final float n241 = n169 - n212;
            final float n242 = n169 + n212;
            final float n243 = n171 - n214;
            final float n244 = n171 + n214;
            final float n245 = n173 - n215;
            final float n246 = n173 + n215;
            final float n247 = n175 - n217;
            final float n248 = n175 + n217;
            final float n249 = n177 - n218;
            final float n250 = n177 + n218;
            final float n251 = (n222 + n220) * 0.9996988f;
            array3[0] = n222 * -0.9751576f + n251;
            array3[31] = n220 * 1.02424f - n251;
            final float n252 = (n226 + n224) * 0.99247956f;
            array3[2] = n226 * -0.87006885f + n252;
            array3[29] = n224 * 1.1148902f - n252;
            final float n253 = (n230 + n228) * 0.9757021f;
            array3[4] = n230 * -0.7566009f + n253;
            array3[27] = n228 * 1.1948034f - n253;
            final float n254 = (n234 + n232) * 0.94952816f;
            array3[6] = n234 * -0.63584644f + n254;
            array3[25] = n232 * 1.2632099f - n254;
            final float n255 = (n238 + n236) * 0.9142098f;
            array3[8] = n238 * -0.5089684f + n255;
            array3[23] = n236 * 1.3194511f - n255;
            final float n256 = (n242 + n240) * 0.87008697f;
            array3[10] = n242 * -0.3771888f + n256;
            array3[21] = n240 * 1.3629851f - n256;
            final float n257 = (n246 + n244) * 0.8175848f;
            array3[12] = n246 * -0.24177662f + n257;
            array3[19] = n244 * 1.393393f - n257;
            final float n258 = (n250 + n248) * 0.7572088f;
            array3[14] = n250 * -0.104036f + n258;
            array3[17] = n248 * 1.4103817f - n258;
            final float n259 = (n221 + n219) * 0.68954057f;
            array3[16] = n221 * 0.034706537f + n259;
            array3[15] = n219 * 1.4137876f - n259;
            final float n260 = (n225 + n223) * 0.6152316f;
            array3[18] = n225 * 0.17311484f + n260;
            array3[13] = n223 * 1.403578f - n260;
            final float n261 = (n229 + n227) * 0.53499764f;
            array3[20] = n229 * 0.30985594f + n261;
            array3[11] = n227 * 1.3798512f - n261;
            final float n262 = (n233 + n231) * 0.44961134f;
            array3[22] = n233 * 0.44361296f + n262;
            array3[9] = n231 * 1.3428357f - n262;
            final float n263 = (n237 + n235) * 0.35989505f;
            array3[24] = n237 * 0.57309777f + n263;
            array3[7] = n235 * 1.2928878f - n263;
            final float n264 = (n241 + n239) * 0.26671275f;
            array3[26] = n241 * 0.6970633f + n264;
            array3[5] = n239 * 1.2304888f - n264;
            final float n265 = (n245 + n243) * 0.17096189f;
            array3[28] = n245 * 0.81431574f + n265;
            array3[3] = n243 * 1.1562395f - n265;
            final float n266 = (n249 + n247) * 0.07356457f;
            array3[30] = n249 * 0.9237259f + n266;
            array3[1] = n247 * 1.070855f - n266;
            final float n267 = array4[0];
            final float n268 = array4[1];
            final float n269 = n267 - n268;
            final float n270 = array4[2];
            final float n271 = n270 - n268;
            final float n272 = array4[3];
            final float n273 = n270 - n272;
            final float n274 = array4[4];
            final float n275 = n274 - n272;
            final float n276 = array4[5];
            final float n277 = n274 - n276;
            final float n278 = array4[6];
            final float n279 = n278 - n276;
            final float n280 = array4[7];
            final float n281 = n278 - n280;
            final float n282 = array4[8];
            final float n283 = n282 - n280;
            final float n284 = array4[9];
            final float n285 = n282 - n284;
            final float n286 = array4[10];
            final float n287 = n286 - n284;
            final float n288 = array4[11];
            final float n289 = n286 - n288;
            final float n290 = array4[12];
            final float n291 = n290 - n288;
            final float n292 = array4[13];
            final float n293 = n290 - n292;
            final float n294 = array4[14];
            final float n295 = n294 - n292;
            final float n296 = array4[15];
            final float n297 = n294 - n296;
            final float n298 = array4[16];
            final float n299 = array4[17];
            final float n300 = n298 - n299;
            final float n301 = array4[18];
            final float n302 = n301 - n299;
            final float n303 = array4[19];
            final float n304 = n301 - n303;
            final float n305 = array4[20];
            final float n306 = n305 - n303;
            final float n307 = array4[21];
            final float n308 = n305 - n307;
            final float n309 = array4[22];
            final float n310 = n309 - n307;
            final float n311 = array4[23];
            final float n312 = n309 - n311;
            final float n313 = array4[24];
            final float n314 = n313 - n311;
            final float n315 = array4[25];
            final float n316 = n313 - n315;
            final float n317 = array4[26];
            final float n318 = n317 - n315;
            final float n319 = array4[27];
            final float n320 = n317 - n319;
            final float n321 = array4[28];
            final float n322 = n321 - n319;
            final float n323 = array4[29];
            final float n324 = n321 - n323;
            final float n325 = array4[30];
            final float n326 = n325 - n323;
            final float n327 = n325 - array4[31];
            final float n328 = (n298 - n296) * 0.70710677f;
            final float n329 = n267 - n328;
            final float n330 = n267 + n328;
            final float n331 = (n283 + n314) * -0.9238795f;
            final float n332 = n283 * 1.306563f + n331;
            final float n333 = n314 * -0.5411961f - n331;
            final float n334 = n330 - n333;
            final float n335 = n330 + n333;
            final float n336 = n329 - n332;
            final float n337 = n329 + n332;
            final float n338 = (n291 + n306) * 0.70710677f;
            final float n339 = n275 - n338;
            final float n340 = n275 + n338;
            final float n341 = (n291 - n306) * 0.70710677f;
            final float n342 = n341 - n322;
            final float n343 = n341 + n322;
            final float n344 = (n343 + n340) * 0.98078525f;
            final float n345 = n343 * -0.78569496f + n344;
            final float n346 = n340 * 1.1758755f - n344;
            final float n347 = (n342 + n339) * 0.8314696f;
            final float n348 = n342 * -0.27589938f + n347;
            final float n349 = n339 * 1.3870399f - n347;
            final float n350 = n335 - n345;
            final float n351 = n335 + n345;
            final float n352 = n337 - n348;
            final float n353 = n337 + n348;
            final float n354 = n336 - n349;
            final float n355 = n336 + n349;
            final float n356 = n334 - n346;
            final float n357 = n334 + n346;
            final float n358 = n279 - n287;
            final float n359 = n279 + n287;
            final float n360 = n310 - n318;
            final float n361 = n310 + n318;
            final float n362 = (n295 + n302) * 0.70710677f;
            final float n363 = n271 - n362;
            final float n364 = n271 + n362;
            final float n365 = (n359 + n361) * -0.9238795f;
            final float n366 = n359 * 1.306563f + n365;
            final float n367 = n361 * -0.5411961f - n365;
            final float n368 = n364 - n367;
            final float n369 = n364 + n367;
            final float n370 = n363 - n366;
            final float n371 = n363 + n366;
            final float n372 = (n295 - n302) * 0.70710677f;
            final float n373 = n326 - n372;
            final float n374 = n326 + n372;
            final float n375 = (n360 + n358) * -0.9238795f;
            final float n376 = n360 * 1.306563f + n375;
            final float n377 = n358 * -0.5411961f - n375;
            final float n378 = n374 - n377;
            final float n379 = n374 + n377;
            final float n380 = n373 - n376;
            final float n381 = n373 + n376;
            final float n382 = (n379 + n369) * 0.9951847f;
            final float n383 = n379 * -0.89716756f + n382;
            final float n384 = n369 * 1.0932019f - n382;
            final float n385 = (n371 - n381) * 0.95694035f;
            final float n386 = n385 - n381 * -0.66665566f;
            final float n387 = n371 * 1.247225f - n385;
            final float n388 = (n380 + n370) * 0.8819213f;
            final float n389 = n380 * -0.41052452f + n388;
            final float n390 = n370 * 1.353318f - n388;
            final float n391 = (n368 - n378) * 0.77301043f;
            final float n392 = n391 - n378 * -0.13861717f;
            final float n393 = n368 * 1.4074037f - n391;
            final float n394 = n351 - n383;
            final float n395 = n351 + n383;
            final float n396 = n353 - n386;
            final float n397 = n353 + n386;
            final float n398 = n355 - n389;
            final float n399 = n355 + n389;
            final float n400 = n357 - n392;
            final float n401 = n357 + n392;
            final float n402 = n356 - n393;
            final float n403 = n356 + n393;
            final float n404 = n354 - n390;
            final float n405 = n354 + n390;
            final float n406 = n352 - n387;
            final float n407 = n352 + n387;
            final float n408 = n350 - n384;
            final float n409 = n350 + n384;
            final float n410 = (n269 + n327) * -0.99879545f;
            final float n411 = n269 * 1.0478631f + n410;
            final float n412 = n327 * -0.9497278f - n410;
            final float n413 = (n277 + n320) * -0.97003126f;
            final float n414 = n277 * 1.2130114f + n413;
            final float n415 = n320 * -0.7270511f - n413;
            final float n416 = (n285 + n312) * -0.9039893f;
            final float n417 = n285 * 1.3315444f + n416;
            final float n418 = n312 * -0.4764342f - n416;
            final float n419 = (n293 + n304) * -0.8032075f;
            final float n420 = n293 * 1.3989068f + n419;
            final float n421 = n304 * -0.20750822f - n419;
            final float n422 = (n300 + n297) * -0.671559f;
            final float n423 = n300 * 1.41251f + n422;
            final float n424 = n297 * 0.06939217f - n422;
            final float n425 = (n308 + n289) * -0.51410276f;
            final float n426 = n308 * 1.3718313f + n425;
            final float n427 = n289 * 0.34362587f - n425;
            final float n428 = (n316 + n281) * -0.33688986f;
            final float n429 = n316 * 1.2784339f + n428;
            final float n430 = n281 * 0.6046542f - n428;
            final float n431 = (n324 + n273) * -0.14673047f;
            final float n432 = n324 * 1.1359069f + n431;
            final float n433 = n273 * 0.842446f - n431;
            final float n434 = n412 - n424;
            final float n435 = n412 + n424;
            final float n436 = n411 - n423;
            final float n437 = n411 + n423;
            final float n438 = n415 - n427;
            final float n439 = n415 + n427;
            final float n440 = n414 - n426;
            final float n441 = n414 + n426;
            final float n442 = n418 - n430;
            final float n443 = n418 + n430;
            final float n444 = n417 - n429;
            final float n445 = n417 + n429;
            final float n446 = n421 - n433;
            final float n447 = n421 + n433;
            final float n448 = n420 - n432;
            final float n449 = n420 + n432;
            final float n450 = (n434 + n436) * -0.98078525f;
            final float n451 = n434 * 1.1758755f + n450;
            final float n452 = n436 * -0.78569496f - n450;
            final float n453 = (n438 + n440) * -0.55557024f;
            final float n454 = n438 * 1.3870399f + n453;
            final float n455 = n440 * 0.27589938f - n453;
            final float n456 = (n442 + n444) * 0.19509032f;
            final float n457 = n442 * 0.78569496f + n456;
            final float n458 = n444 * 1.1758755f - n456;
            final float n459 = (n446 + n448) * 0.8314696f;
            final float n460 = n446 * -0.27589938f + n459;
            final float n461 = n448 * 1.3870399f - n459;
            final float n462 = n435 - n443;
            final float n463 = n435 + n443;
            final float n464 = n437 - n445;
            final float n465 = n437 + n445;
            final float n466 = n439 - n447;
            final float n467 = n439 + n447;
            final float n468 = n441 - n449;
            final float n469 = n441 + n449;
            final float n470 = n452 - n458;
            final float n471 = n452 + n458;
            final float n472 = n451 - n457;
            final float n473 = n451 + n457;
            final float n474 = n455 - n461;
            final float n475 = n455 + n461;
            final float n476 = n454 - n460;
            final float n477 = n454 + n460;
            final float n478 = (n462 + n464) * -0.9238795f;
            final float n479 = n462 * 1.306563f + n478;
            final float n480 = n464 * -0.5411961f - n478;
            final float n481 = (n466 + n468) * 0.38268343f;
            final float n482 = n466 * 0.5411961f + n481;
            final float n483 = n468 * 1.306563f - n481;
            final float n484 = (n470 + n472) * -0.9238795f;
            final float n485 = n470 * 1.306563f + n484;
            final float n486 = n472 * -0.5411961f - n484;
            final float n487 = (n474 + n476) * 0.38268343f;
            final float n488 = n474 * 0.5411961f + n487;
            final float n489 = n476 * 1.306563f - n487;
            final float n490 = n463 - n467;
            final float n491 = n463 + n467;
            final float n492 = n465 - n469;
            final float n493 = n465 + n469;
            final float n494 = n480 - n483;
            final float n495 = n480 + n483;
            final float n496 = n479 - n482;
            final float n497 = n479 + n482;
            final float n498 = n471 - n475;
            final float n499 = n471 + n475;
            final float n500 = n473 - n477;
            final float n501 = n473 + n477;
            final float n502 = n486 - n489;
            final float n503 = n486 + n489;
            final float n504 = n485 - n488;
            final float n505 = n485 + n488;
            final float n506 = (n490 - n492) * 0.70710677f;
            final float n507 = (n490 + n492) * 0.70710677f;
            final float n508 = (n494 - n496) * 0.70710677f;
            final float n509 = (n494 + n496) * 0.70710677f;
            final float n510 = (n498 - n500) * 0.70710677f;
            final float n511 = (n498 + n500) * 0.70710677f;
            final float n512 = (n502 - n504) * 0.70710677f;
            final float n513 = (n502 + n504) * 0.70710677f;
            array4[31] = (n395 + n491) * 0.5001506f;
            array4[30] = (n397 + n499) * 0.50135845f;
            array4[29] = (n399 + n503) * 0.5037887f;
            array4[28] = (n401 + n495) * 0.50747114f;
            array4[27] = (n403 + n509) * 0.51245147f;
            array4[26] = (n405 + n513) * 0.5187927f;
            array4[25] = (n407 + n511) * 0.5265773f;
            array4[24] = (n409 + n507) * 0.53590983f;
            array4[23] = (n408 + n506) * 0.5469204f;
            array4[22] = (n406 + n510) * 0.5597698f;
            array4[21] = (n404 + n512) * 0.5746552f;
            array4[20] = (n402 + n508) * 0.5918185f;
            array4[19] = (n400 + n497) * 0.61155736f;
            array4[18] = (n398 + n505) * 0.63423896f;
            array4[17] = (n396 + n501) * 0.6603198f;
            array4[16] = (n394 + n493) * 0.6903721f;
            array4[15] = (n394 - n493) * 0.72512054f;
            array4[14] = (n396 - n501) * 0.76549417f;
            array4[13] = (n398 - n505) * 0.8127021f;
            array4[12] = (n400 - n497) * 0.8683447f;
            array4[11] = (n402 - n508) * 0.9345836f;
            array4[10] = (n404 - n512) * 1.0144082f;
            array4[9] = (n406 - n510) * 1.1120716f;
            array4[8] = (n408 - n506) * 1.2338327f;
            array4[7] = (n409 - n507) * 1.3892939f;
            array4[6] = (n407 - n511) * 1.5939723f;
            array4[5] = (n405 - n513) * 1.874676f;
            array4[4] = (n403 - n509) * 2.2820501f;
            array4[3] = (n401 - n495) * 2.9246285f;
            array4[2] = (n399 - n503) * 4.084611f;
            array4[1] = (n397 - n499) * 6.7967505f;
            array4[0] = (n395 - n491) * 20.373878f;
            for (int k = 0; k < 32; ++k) {
                final float[] b = this.b;
                final int c = this.c;
                b[c + k] = (b[c + 640 + k] = -array3[k] + array4[k]);
                b[c + 63 - k] = (b[c + 640 + 63 - k] = array3[k] + array4[k]);
            }
            for (int l = 0; l < 32; ++l, ++n) {
                final float[] b2 = this.b;
                final int c2 = this.c;
                final float n514 = b2[c2 + l];
                final float[] a = ek2.b.a;
                final int n515 = l * 2;
                array2[n] = b2[c2 + 608 + l] * a[n515 + 576] + (b2[c2 + 512 + l] * a[n515 + 512] + (b2[c2 + 480 + l] * a[n515 + 448] + (b2[c2 + 384 + l] * a[n515 + 384] + (b2[c2 + 352 + l] * a[n515 + 320] + (b2[c2 + 256 + l] * a[n515 + 256] + (b2[c2 + 224 + l] * a[n515 + 192] + (b2[c2 + 128 + l] * a[n515 + 128] + (b2[c2 + 96 + l] * a[n515 + 64] + n514 * a[n515]))))))));
            }
            if ((this.c -= 64) < 0) {
                this.c = 576;
            }
        }
    }
    
    public final void b(final g g, final float[][][] array, final float[] array2) {
        final float[] array3 = new float[32];
        final float[] array4 = new float[32];
        final float[] array5 = new float[32];
        final float[] array6 = new float[32];
        final float[] array7 = new float[32];
        final float[] array8 = new float[32];
        final float[] array9 = new float[32];
        final float[] array10 = new float[32];
        int n;
        for (int i = n = 0; i < g.x0; ++i) {
            final float[][] array11 = array[i];
            int j = 1;
            array4[31] = array11[1][0] * 0.015625f;
            array3[0] = array11[0][0] * 0.015625f;
            array8[31] = array11[62][1] * 0.015625f;
            array7[0] = array11[63][1] * 0.015625f;
            while (j < 31) {
                final int n2 = 31 - j;
                final int n3 = j * 2;
                final int n4 = n3 + 1;
                array4[n2] = array11[n4][0] * 0.015625f;
                array3[j] = array11[n3][0] * 0.015625f;
                array8[n2] = array11[63 - n4][1] * 0.015625f;
                array7[j] = array11[63 - n3][1] * 0.015625f;
                ++j;
            }
            array4[0] = array11[63][0] * 0.015625f;
            array3[31] = array11[62][0] * 0.015625f;
            array8[0] = array11[0][1] * 0.015625f;
            array7[31] = 0.015625f * array11[1][1];
            a.F(array3, array4, array5, array6);
            a.F(array7, array8, array9, array10);
            final int c = this.c;
            final int n5 = c + 1280;
            for (int k = 0; k < 32; ++k) {
                final float[] b = this.b;
                final int n6 = k * 2;
                final int n7 = c + n6;
                final int n8 = n5 + n6;
                b[n7] = (b[n8] = array9[k] - array5[k]);
                final int n9 = c + 127;
                final int n10 = n5 + 127;
                b[n9 - n6] = (b[n10 - n6] = array9[k] + array5[k]);
                final int n11 = 31 - k;
                b[n7 + 1] = (b[n8 + 1] = array10[n11] + array6[n11]);
                final int n12 = n6 + 1;
                b[n9 - n12] = (b[n10 - n12] = array10[n11] - array6[n11]);
            }
            final int c2 = this.c;
            for (int l = 0; l < 64; ++l, ++n) {
                final float[] b2 = this.b;
                final int n13 = c2 + l;
                final float n14 = b2[n13 + 0];
                final float[] a = ek2.b.a;
                array2[n] = b2[n13 + 1216] * a[l + 576] + (b2[n13 + 1024] * a[l + 512] + (b2[n13 + 960] * a[l + 448] + (b2[n13 + 768] * a[l + 384] + (b2[n13 + 704] * a[l + 320] + (b2[n13 + 512] * a[l + 256] + (b2[n13 + 448] * a[l + 192] + (b2[n13 + 256] * a[l + 128] + (b2[n13 + 192] * a[l + 64] + n14 * a[l + 0]))))))));
            }
            if ((this.c -= 128) < 0) {
                this.c = 1152;
            }
        }
    }
}
