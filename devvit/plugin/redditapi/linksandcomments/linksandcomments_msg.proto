syntax = "proto3";

package devvit.plugin.redditapi.linksandcomments;

option go_package = "github.snooguts.net/reddit/reddit-devplatform-monorepo/go-common/generated/protos/types/devvit/plugin/redditapi";
option java_package = "com.reddit.devvit.plugin.redditapi.linksandcomments";

import "google/protobuf/descriptor.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/any.proto";
import "devvit/plugin/redditapi/common/common_msg.proto";

// Request Types

message CommentRequest {
  bool return_rtjson = 1;
  string richtext_json = 2;
  string text = 3;
  string thing_id = 4;
}

message EventPostTimeRequest {
  string event_end = 1;
  string event_start = 2;
  string event_tz = 3;
  string id = 4;
}

message FollowPostRequest {
  bool follow = 1;
  string fullname = 2;
}

message BasicIdRequest {
  string id = 1;
}

message InfoRequest {
  repeated string subreddits = 1;
  repeated string thing_ids = 2;
  google.protobuf.StringValue url = 3;
}

message MoreChildrenRequest {
  bool children = 1;
  int32 depth = 2;
  string id = 3;
  bool limit_children = 4;
  string link_id = 5;
  string sort = 6;
}

message ReportRequest {
  string additional_info = 1;
  string custom_text = 2;
  bool from_help_desk = 3;
  bool from_modmail = 4;
  string modmail_conv_id = 5;
  string other_reason = 6;
  string reason = 7;
  string rule_reason = 8;
  string site_reason = 9;
  string sr_name = 10;
  string thing_id = 11;
  string usernames = 12;
}

message ReportAwardRequest {
  string award_id = 1;
  string reason = 2;
}

message SaveRequest {
  string id = 1;
  string category = 2;
}

message SendRepliesRequest {
  string id = 1;
  bool state = 2;
}

message SetContestModeRequest {
  string id = 1;
  bool state = 2;
}

message SetSubredditStickyRequest {
  string id = 1;
  int32 num = 2;
  bool state = 3;
  bool to_profile = 4;
}

message SetSuggestedSortRequest {
  string id = 1;
  string sort = 2;
}

message StoreVisitsRequest {
  string links = 1;
}

message SubmitRequest {
  bool ad = 1;
  string collection_id = 2;
  string event_end = 3;
  string event_start = 4;
  string event_tz = 5;
  string extension = 6;
  string flair_id = 7;
  string flair_text = 8;
  string kind = 9;
  bool nsfw = 10;
  bool resubmit = 11;
  string richtext_json = 12;
  bool sendreplies = 13;
  bool spoiler = 14;
  string sr = 15;
  string text = 16;
  string title = 17;
  string url = 18;
  string video_poster_url = 19;
}

message VoteRequest {
  int32 dir = 1;
  string id = 2;
  int32 rank = 3;
}

// Response Types
message EventPostTimeResponse {
  google.protobuf.BoolValue event_is_live = 1;
  google.protobuf.Int64Value event_start = 2;
  google.protobuf.Int64Value event_end = 3;

  message JsonErrorType {
    repeated google.protobuf.Any errors = 1;
  }
  JsonErrorType json = 4;
}

message MoreChildrenResponse {
  message JsonType {
    message JsonData {
      repeated devvit.plugin.redditapi.common.WrappedRedditObject things = 1;
    }

    repeated google.protobuf.Any errors = 1;
    JsonData data = 2;
  }
  JsonType json = 4;
}

message SavedCategoriesResponse {
  message Category {
    google.protobuf.StringValue category = 1; 
  }

  repeated Category categories = 1;
}

message SubmitResponse {
  message JsonType {
    message JsonData {
      google.protobuf.StringValue url = 1;
      google.protobuf.Int32Value drafts_count = 2;
      google.protobuf.StringValue id = 3;
      google.protobuf.StringValue name = 4;
    }

    repeated google.protobuf.Any errors = 1;
    JsonData data = 2;
  }
  JsonType json = 4;
}
